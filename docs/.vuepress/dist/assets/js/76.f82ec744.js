(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{578:function(e,n,t){"use strict";t.r(n);var s=t(62),r=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("项目中遇到加载列表数据一千多条，发现在小程序中渲染时间过慢，后采用分屏加载方法。")]),e._v(" "),t("h4",{attrs:{id:"intersectionobserver-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#intersectionobserver-对象"}},[e._v("#")]),e._v(" IntersectionObserver 对象")]),e._v(" "),t("p",[e._v("IntersectionObserver 对象，用于推断某些节点是否可以被用户看见、有多大比例可以被用户看见。")]),e._v(" "),t("p",[t("strong",[e._v("wx.createIntersectionObserver(Object this, Object options)")])]),e._v(" "),t("p",[e._v("https://developers.weixin.qq.com/miniprogram/dev/api/wx.createIntersectionObserver.html")]),e._v(" "),t("p",[e._v("方法")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("IntersectionObserver.relativeTo(string selector, Object margins)\n使用选择器指定一个节点，作为参照区域之一。\n\nIntersectionObserver.relativeToViewport(Object margins)\n指定页面显示区域作为参照区域之一\n\nIntersectionObserver.observe(string targetSelector, IntersectionObserver.observeCallback callback)\n指定目标节点并开始监听相交状态变化情况\n callback监听相交状态变化的回调函数\n\nIntersectionObserver.disconnect()\n停止监听。回调函数将不再触发\n")])])]),t("p",[e._v("用以组件进入可视区域的时候，就显示，否则隐藏；\n主页面中：\nwxml:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' <scroll-view scroll-y="true" style="height:{{scrollHeight}}px" scroll-into-view="{{scrollTopId!=\'#\'?scrollTopId:\'specal\'}}" hidden="{{relShow}}">\n      <Brand wx:for="{{brandlist}}" wx:for-item="item" item="{{item}}" wx:key="{{index}}" index="{{index}}" id="{{item.key!=\'#\'?item.key:\'specal\'}}" len="{{item.list.length}}" bind:bindbrand="bindbrand"/>\n    </scroll-view>\n')])])]),t("p",[e._v("json中：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('"usingComponents": {\n    "Brand": "../../components/brandItem/index" \n  }\n')])])]),t("p",[e._v("组件wxml：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<view class="observer" wx:if="{{ observer_status}}" style=\'height:{{len*90}}rpx;\'></view>\n<view class="selection select{{index}}" wx:else>\n \x3c!-- 内容 --\x3e\n</view>\n')])])]),t("p",[e._v("组件js:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("let mixin = require('../../mixin/mixin')\n\nComponent({\n  behaviors: [mixin],\n  properties: {\n    item: {\n      type: Object,\n      value: {}\n    },\n    index: {\n      type: Number,\n      value: 0\n    },\n    len: {\n      type: Number,\n      value: 0\n    }\n  },\n  ready: function() {},\n  methods: {\n    bindbrand: function(e) {   \n      \x3c!-- con --\x3e\n    }\n  }\n})\n")])])]),t("p",[e._v("其中mixin.js:\n用到了组件behaviors")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\nmodule.exports = Behavior({\n  data: {\n    observer_status: true\n  },\n  ready() {\n    this.observer = this.createIntersectionObserver().relativeToViewport()\n    this.observer.observe('.observer', (res) => {\n      this.setData({\n        observer_status: false\n      })\n      this.observer.disconnect()\n      this.observer = null\n    })\n  },\n  detached() {\n    this.observer && this.observer.disconnect()\n  },\n})\n")])])]),t("p",[t("strong",[e._v("behaviors：")])]),e._v(" "),t("ul",[t("li",[e._v("behaviors 是用于组件间代码共享的特性，类似于一些编程语言中的“mixins”或“traits”。")]),e._v(" "),t("li",[e._v("每个 behavior 可以包含一组属性、数据、生命周期函数和方法，组件引用它时，它的属性、数据和方法会被合并到组件中，生命周期函数也会在对应时机被调用。")]),e._v(" "),t("li",[e._v("每个组件可以引用多个 behavior 。 behavior 也可以引用其他 behavior 。")])]),e._v(" "),t("p",[e._v("behavior 需要使用 Behavior() 构造器定义。\n组件引用时，在 behaviors 定义段中将它们逐个列出即可\n"),t("code",[e._v("behaviors: [mixin]")])])])}),[],!1,null,null,null);n.default=r.exports}}]);