(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{597:function(t,n,e){"use strict";e.r(n);var i=e(62),a=Object(i.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_16th-设计模式-状态模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16th-设计模式-状态模式"}},[t._v("#")]),t._v(" 16th 设计模式-状态模式")]),t._v(" "),e("p",[t._v("标签（空格分隔）： 设计模式")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("状态模式的关键是区分事物内部的状态")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// OffLightState：\nvar OffLightState = function (light) {\n    this.light = light;\n};\nOffLightState.prototype.buttonWasPressed = function () {\n    console.log('弱光'); // offLightState对应的行为   \n    this.light.setState(this.light.weakLightState); // 切换状态到weakLightState\n};\n\n//WeakLightState\nvar WeakLightState = function (light) {\n    this.light = light;\n};\nWeakLightState.prototype.buttonWasPressed = function () {\n    console.log('强光');\n    // weakLightState对应的行为    \n    this.light.setState(this.light.strongLightState); // 切换状态到strongLightState\n};\n// StrongLightState：\nvar StrongLightState = function (light) {\n    this.light = light;\n};\nStrongLightState.prototype.buttonWasPressed = function () {\n    console.log('关灯');\n    // strongLightState对应的行为    \n    this.light.setState(this.light.offLightState); // 切换状态到offLightState\n};\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var Light = function () {\n    this.offLightState = new OffLightState(this);\n    this.weakLightState = new WeakLightState(this);\n    this.strongLightState = new StrongLightState(this);\n    this.button = null;\n};\nLight.prototype.init = function () {\n    var button = document.createElement('button'),\n        self = this;\n    this.button = document.body.appendChild(button);\n    this.button.innerHTML = '开关';\n    this.currState = this.offLightState; // 设置当前状态    \n    this.button.onclick = function () {\n        self.currState.buttonWasPressed();\n    }\n};\nLight.prototype.setState = function (newState) {\n    this.currState = newState;\n};\n\n\n\nvar light = new Light();\nlight.init();\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);