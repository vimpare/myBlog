(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{590:function(n,t,e){"use strict";e.r(t);var s=e(62),a=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("标签（空格分隔）： 小程序")]),n._v(" "),e("hr"),n._v(" "),e("p",[n._v("小程序的一套脚本语言，结合 WXML，可以构建出页面的结构")]),n._v(" "),e("p",[n._v("WXS 的运行环境和其他 JavaScript 代码是隔离的，WXS 中不能调用其他 JavaScript 文件中定义的函数，也不能调用小程序提供的API")]),n._v(" "),e("p",[e("strong",[n._v("页面渲染")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\x3c!--wxml--\x3e\n<wxs module="m1">\nvar msg = "hello world";\n\nmodule.exports.message = msg;\n</wxs>\n\n<view> {{m1.message}} </view>\n')])])]),e("p",[e("strong",[n._v("数据处理")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// page.js\nPage({\n  data: {\n    array: [1, 2, 3, 4, 5, 1, 2, 3, 4]\n  }\n})\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\x3c!--wxml--\x3e\n\x3c!-- 下面的 getMax 函数，接受一个数组，且返回数组中最大的元素的值 --\x3e\n<wxs module="m1">\nvar getMax = function(array) {\n  var max = undefined;\n  for (var i = 0; i < array.length; ++i) {\n    max = max === undefined ?\n      array[i] :\n      (max >= array[i] ? max : array[i]);\n  }\n  return max;\n}\n\nmodule.exports.getMax = getMax;\n</wxs>\n\n\x3c!-- 调用 wxs 里面的 getMax 函数，参数为 page.js 里面的 array --\x3e\n<view> {{m1.getMax(array)}} </view>\n')])])]),e("p",[e("strong",[n._v("WXS响应事件")])]),n._v(" "),e("p",[n._v("背景：一次 touchmove 的响应需要经过 2 次的逻辑层和渲染层的通信以及一次渲染，通信的耗时比较大。为了减少通信的次数，让事件在视图层（Webview）响应。")]),n._v(" "),e("blockquote",[e("p",[n._v("使用 WXS 函数用来响应小程序事件，目前只能响应内置组件的事件，不支持自定义组件事件")])]),n._v(" "),e("p",[n._v("WXS 函数的除了纯逻辑的运算，还可以通过封装好的ComponentDescriptor 实例来访问以及设置组件的 class 和样式，对于交互动画，设置 style 和 class 足够了")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('var wxsFunction = function(event, ownerInstance) {\n    var instance = ownerInstance.selectComponent(\'.classSelector\') // 返回组件的实例\n    instance.setStyle({\n        "font-size": "14px" // 支持rpx\n    })\n    instance.getDataset()\n    instance.setClass(className)\n    // ...\n    return false // 不往上冒泡，相当于调用了同时调用了stopPropagation和preventDefault\n}\n')])])]),e("p",[n._v("其中入参 event 是小程序事件对象基础上多了 event.instance 来表示触发事件的组件的 ComponentDescriptor 实例。ownerInstance 表示的是触发事件的组件所在的组件的 ComponentDescriptor 实例，如果触发事件的组件是在页面内的，ownerInstance 表示的是页面实例。")]),n._v(" "),e("table",[e("thead",[e("tr",[e("th",[n._v("方法")]),n._v(" "),e("th",[n._v("参数")]),n._v(" "),e("th",[n._v("描述")])])]),n._v(" "),e("tbody",[e("tr",[e("td",[n._v("selectComponent")]),n._v(" "),e("td",[n._v("selector对象")]),n._v(" "),e("td",[n._v("返回组件的 ComponentDescriptor 实例。")])]),n._v(" "),e("tr",[e("td",[n._v("selectAllComponents")]),n._v(" "),e("td",[n._v("selector对象数组")]),n._v(" "),e("td",[n._v("返回组件的 ComponentDescriptor 实例数组。")])]),n._v(" "),e("tr",[e("td",[n._v("setStyle")]),n._v(" "),e("td",[n._v("Object/string")]),n._v(" "),e("td",[n._v("设置组件样式，支持rpx。设置的样式优先级比组件 wxml 里面定义的样式高。不能设置最顶层页面的样式。")])]),n._v(" "),e("tr",[e("td",[n._v("addClass/removeClass/ hasClass")]),n._v(" "),e("td",[n._v("string")]),n._v(" "),e("td",[n._v("设置组件的 class。设置的 class 优先级比组件 wxml 里面定义的 class 高。不能设置最顶层页面的 class。")])]),n._v(" "),e("tr",[e("td",[n._v("getDataset")]),n._v(" "),e("td",[n._v("无")]),n._v(" "),e("td",[n._v("返回当前组件/页面的 dataset 对象")])]),n._v(" "),e("tr",[e("td",[n._v("callMethod")]),n._v(" "),e("td",[n._v("(funcName:string, args:object)")]),n._v(" "),e("td",[n._v("调用当前组件/页面在逻辑层（App Service）定义的函数。funcName表示函数名称，args表示函数的参数。")])]),n._v(" "),e("tr",[e("td",[n._v("requestAnimationFrame")]),n._v(" "),e("td",[n._v("Function")]),n._v(" "),e("td",[n._v("和原生 requestAnimationFrame 一样。用于设置动画。")])]),n._v(" "),e("tr",[e("td",[n._v("getState")]),n._v(" "),e("td",[n._v("无")]),n._v(" "),e("td",[n._v("返回一个object对象，当有局部变量需要存储起来后续使用的时候用这个方法。")])]),n._v(" "),e("tr",[e("td",[n._v("triggerEvent")]),n._v(" "),e("td",[n._v("(eventName, detail)")]),n._v(" "),e("td",[n._v("和组件的triggerEvent一致。")])])])]),n._v(" "),e("blockquote",[e("p",[n._v("WXS 运行在视图层（Webview），里面的逻辑毕竟能做的事件比较少，需要有一个机制和逻辑层（App Service）开发者的代码通信，上面的 "),e("code",[n._v("callMethod")]),n._v(" 是 WXS 里面调用逻辑层（App Service）开发者的代码的方法")])]),n._v(" "),e("p",[n._v("使用方法\nWXML定义事件：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<wxs module="test" src="./test.wxs"></wxs>\n<view change:prop="{{test.propObserver}}" prop="{{propValue}}" bindtouchmove="{{test.touchmove}}" class="movable"></view>\n')])])]),e("p",[n._v("上面的change:prop（属性前面带change:前缀）是在 prop 属性被设置的时候触发 WXS 函数，值必须用{{}}括起来。类似 Component 定义的 properties 里面的 observer 属性，在setData({propValue: newValue})调用之后会触发。")]),n._v(" "),e("p",[n._v("注意：WXS函数必须用{{}}括起来。当 prop 的值被设置 WXS 函数就会触发，而不只是值发生改变，所以在页面初始化的时候会调用一次WxsPropObserver的函数。")]),n._v(" "),e("p",[n._v("WXS文件test.wxs里面定义并导出事件处理函数和属性改变触发的函数：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("module.exports = {\n    touchmove: function(event, instance) {\n        console.log('log event', JSON.stringify(event))\n    },\n    propObserver: function(newValue, oldValue, ownerInstance, instance) {\n        console.log('prop observer', newValue, oldValue)\n    }\n}\n")])])]),e("p",[n._v("示例：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/* wxs文件 */\nswipeDirection = 0; //是否触发水平滑动 0:未触发 1:触发水平滑动 2:触发垂直滑动\nvar touchstart = function(event, ownerInstance) {\n\n  var ins = event.instance\n  var st = ins.getState()\n  st.isMoving = true\n\n  st.startX = event.touches[0].clientX;\n  st.startY = event.touches[0].clientY;\n\n  var _data = event.currentTarget.dataset,\n    _loc = _data.loc,\n    _twoIndex = _data.index;\n\n  st.index = _loc;\n  st.twoIndex = _twoIndex;\n}\n\n\nvar touchmove = function(event, ownerInstance) {\n  var ins = event.instance\n  var st = ins.getState()\n  if (!st.isMoving) return\n\n  if (event.touches.length == 1) {\n\n\n    if (swipeDirection === 2) {\n      return;\n    }\n\n\n\n    var pagex = event.touches[0].pageX - st.startX\n    var movex = pagex > 0 ? Math.min(st.delBtnWidth, pagex) : Math.max(-st.delBtnWidth, pagex)\n\n\n    // //已触发垂直滑动，由scroll-view处理滑动操作;\n    // //手指起始点位置与移动期间的差值 \n    var pagey = event.touches[0].pageY - st.startY;\n    // //未触发滑动方向\n    if (swipeDirection === 0) {\n\n      //触发垂直操作\n      if (Math.abs(pagey) > 20) {\n        swipeDirection = 2;\n\n        return;\n      }\n      //触发水平操作\n      if (Math.abs(movex) > 4) {\n\n        swipeDirection = 1;\n        ownerInstance.callMethod('scrollYFn', {\n          scrollY: false\n        })\n      } else {\n        // return;\n      }\n\n    }\n    // 往回滑动的情况\n    var goods = ownerInstance.selectAllComponents('.good-con')\n    goods.map(function(item) {\n      var itemOut = item.getState().out\n      if (itemOut) {\n        item.setStyle({\n          'transform': 'translateX(0px)',\n          'transition': 'transform 0.4s'\n        })\n      }\n    })\n\n    if (st.out) {\n      // 已经是划出来了，还要往左滑动，忽略\n      if (movex < 0) return\n      ins.setStyle({\n        'transform': 'translateX(' + (st.transformx + movex) + 'px)',\n        'transition': ''\n      })\n\n      return\n    }\n\n    if (movex > 0) movex = 0\n\n    st.transformx = movex\n\n    ins.setStyle({\n      'transform': 'translateX(' + movex + 'px)',\n      'transition': ''\n    })\n\n    ownerInstance.callMethod('wxsTouchmove')\n\n    return\n  }\n\n}\n\n\nvar touchend = function(event, ownerInstance) {\n  var ins = event.instance\n  var st = ins.getState()\n  if (!st.isMoving) return\n  st.isMoving = false\n \n\n  swipeDirection = 0;\n  if (event.changedTouches.length == 1) {\n    //手指移动结束后水平位置\n    var endX = event.changedTouches[0].clientX;\n    var endY = event.changedTouches[0].clientY;\n    //触摸开始与结束，手指移动的距离\n    var disX = st.startX - endX;\n    var disY = st.startY - endY;\n    var delBtnWidth = st.delBtnWidth;\n    // if ((Math.abs(disY) > 10 && disX < delBtnWidth) || disX<0) {\n    if (Math.abs(event.changedTouches[0].pageX - st.startX) < st.throttle || event.changedTouches[0].pageX - st.startX > 0) {\n      st.out = false\n      ins.setStyle({\n        'transform': 'translateX(0px)',\n        'transition': 'transform 0.4s'\n      })\n      ownerInstance.callMethod('scrollYFn', {\n        scrollY: true\n      })\n      return;\n    }\n\n\n    //如果距离小于删除按钮的1/2，不显示删除按钮\n    var txtStyle = disX > delBtnWidth / 2 ? \"-\" + delBtnWidth : \"0\";\n\n    ins.setStyle({\n      'transform': 'translateX(' + (txtStyle) + 'px)',\n      'transition': 'transform 0.4s'\n    })\n    st.out = true;\n    st.transformx = -Math.abs(txtStyle)\n    if (disX <= delBtnWidth / 2) {\n      ownerInstance.callMethod('scrollYFn', {\n        scrollY: true\n      })\n    }\n  }\n  ownerInstance.callMethod('show')\n}\n\n\nvar hideButton = function(event, ownerInstance) {\n  var goods = ownerInstance.selectAllComponents('.good-con')\n\n  goods.map(function(item) {\n    if (item.hasClass('touchmove')) {\n      item.setStyle({\n        'transform': 'translateX(0px)',\n        'transition': 'transform 500ms'\n      })\n    }\n  })\n\n  st.transformx = 0\n  ownerInstance.callMethod('buttonTapByWxs', {\n    id: event.currentTarget.dataset.id\n  })\n  return false\n}\n\nvar delBtnWidthFn = function(newVal, oldVal, ownerInstance, ins) {\n  var st = ins.getState()\n  st.transformx = 0\n  st.delBtnWidth = newVal;\n  st.throttle = 40 // 固定值\n}\n\nmodule.exports = {\n  touchstart: touchstart,\n  touchmove: touchmove,\n  touchend: touchend,\n  hideButton: hideButton,\n  delBtnWidthFn: delBtnWidthFn\n\n}\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('//wxml\n<wxs src="./../common/slideview.wxs" module="slideHander"></wxs>\n\n//...\n<view class="good-con flex"  bindtouchstart="{{slideHander.touchstart}}" bindtouchmove="{{slideHander.touchmove}}" bindtouchend="{{slideHander.touchend}}" delbtnwidth="{{delBtnWidth}}" change:delbtnwidth="{{slideHander.delBtnWidthFn}}"></view>\n')])])])])}),[],!1,null,null,null);t.default=a.exports}}]);