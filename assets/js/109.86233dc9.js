(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{503:function(a,e,t){"use strict";t.r(e);var v=t(62),n=Object(v.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[t("strong",[a._v("1.语句和表达式")])]),a._v(" "),t("p",[a._v("JavaScript的语句相当于句子，表达式相当于短语，运算符则相当于标点符号和连接词。")]),a._v(" "),t("p",[t("strong",[a._v("2.语句的结果值")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("语句都有一个结果值，获得结果值最直接的方法是在浏览器开发控制台中输入语句，默认情况下控制台会显示所执行的最后一条语句的结果值\n以赋值表达式b = a为例，其结果值是赋给b的值（18），但规范定义var的结果值是undefined。如果在控制台中输入var a = 42会得到结果值undefined，而非42。")])]),a._v(" "),t("li",[t("p",[a._v("在代码中是没有办法获得这个结果值的")])]),a._v(" "),t("li",[t("p",[a._v("其他语句的结果值")]),a._v(" "),t("ul",[t("li",[a._v("代码块{ .. }的结果值是其最后一个语句/表达式的结果\n例如："),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var b;\nif (true) { \n   b = 4 + 38;\n}\n")])])]),a._v("在控制台/REPL中输入以上代码应该会显示42，即最后一个语句/表达式b = 4 + 38的结果值。换句话说，代码块的结果值就如同一个隐式的返回，即返回最后一个语句的结果值。")])])]),a._v(" "),t("li",[t("p",[a._v("语法不允许我们获得语句的结果值并将其赋值给另一个变量")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var a, b;\na = if (true) {\n  b = 4 + 38;\n};\n")])])]),t("p",[a._v("控制台报错 "),t("code",[a._v("Uncaught SyntaxError: Unexpected token 'if'")])])]),a._v(" "),t("li",[t("p",[a._v("怎样获得语句的结果值")]),a._v(" "),t("ul",[t("li",[a._v("可以使用万恶的eval(..)（又读作“evil”）来获得结果值(切勿使用)")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('var a, b;\na = eval("if (true) { b = 4 + 38; }");\na; // 42\n')])])]),t("ul",[t("li",[a._v("ES7规范有一项“do表达式”（do expression）提案；")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var a, b;\na = do {\n  if (true) {\n      b = 4 + 38;\n  }\n}; \na ; // 42\n")])])])])]),a._v(" "),t("p",[t("strong",[a._v("3.表达式的副作用")])]),a._v(" "),t("ul",[t("li",[a._v("最常见的有副作用（也可能没有）的表达式是函数调用")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("function foo() {\n    a = a + 1;\n}\nvar a = 1;\nfoo(); // 结果值：undefined。副作用：a的值被改变\n")])])]),t("ul",[t("li",[a._v("++运算符"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var a = 42;var b = a++;\na;  // 43\nb;  // 42\n")])])])])]),a._v(" "),t("p",[a._v("++在前面时，如++a，它的副作用（将a递增）产生在表达式返回结果值之前，而a++的副作用则产生在之后")]),a._v(" "),t("p",[a._v("------没看懂")]),a._v(" "),t("p",[t("strong",[a._v("4.上下文规则")]),a._v("\n在JavaScript语法规则中，有时候同样的语法在不同的情况下会有不同的解释。这些语法规则孤立起来会很难理解")]),a._v(" "),t("p",[a._v("常见情况：")]),a._v(" "),t("ul",[t("li",[a._v("大括号\n用到大括号的情况\n"),t("ul",[t("li",[a._v("对象常量\n用大括号定义对象常量（objectliteral）：")])])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 假定函数bar()已经定义\nvar a = {    \nfoo: bar()\n};\n")])])]),t("p",[a._v("{ .. }被赋值给a，因而它是一个对象常量。")]),a._v(" "),t("ul",[t("li",[a._v("标签\n如果将上例中的var a =去掉会发生什么情况呢？")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 假定函数bar()已经定义\n{    \nfoo: bar()\n}\n")])])]),t("p",[a._v("很多开发人员以为这里的{ .. }只是一个孤立的对象常量，没有赋值。事实上不是这样。\n{ .. }在这里只是一个普通的代码块。{ .. }和for/while循环以及if条件语句中代码块的作用基本相同。")]),a._v(" "),t("p",[a._v("标签语句:foo是语句bar()的标签")]),a._v(" "),t("ul",[t("li",[a._v("代码块")]),a._v(" "),t("li",[a._v("对象解构")]),a._v(" "),t("li",[a._v("else if和可选代码块")])])])}),[],!1,null,null,null);e.default=n.exports}}]);